#!/bin/bash

## Author : Ankur Kumar (SirJager)
## Github : @SirJager

filepath="$HOME/.local/share/jager/bookmarks"

rofi_theme="$HOME/.config/rofi/themes/dmenu.rasi"

notify="true"
delay="20"
typing="true"
copy="true"

prompt_dmneu="Bookmark Manager"
prompt_add="Add Bookmark"
prompt_select="Select Bookmark"
prompt_remove="Remove Bookmark"

is_link() {
    # Regular expression to match URLs
    # url_pattern='^(http|https)://([a-zA-Z0-9_-]+\.)+[a-zA-Z]{2,6}(/\S*)?$'
    url_pattern='^(https?://)?([a-zA-Z0-9_-]+\.)+[a-zA-Z]{2,6}(/\S*)?$'
    if echo "$1" | grep -qE "$url_pattern"; then
        return 0
    else
        return 1
    fi
}

export_from_chrome() {
    # Check if input arguments are provided
    if [ $# -ne 2 ]; then
        notify-send -t 3000 -u critical "Failed to export bookamarks" "Usage: $0 --export input output"
        exit 1
    fi
    input_file="$1"
    output_file="$2"
    # Check if the input file exists
    if [ ! -f "$input_file" ]; then
        notify-send -t 3000 -u critical "Unable to export links" "'$input_file' file does not exists"
        exit 1
    fi

    # Use awk to extract links from the exported bookmarks HTML file
    awk -F 'HREF="' '/HREF=/{print $2;}' "$input_file" | awk -F '"' '{print $1;}' >>"$output_file"

    notify-send -t 3000 "Bookmarks exported" "saved in '$output_file'"
}

link_exits(){
    if grep -q "^$1$" "$filepath"; then
        return 0 # exits
    else
        return 1 # Not exists
    fi
}

save_bookmark() {
    [ "$1" = "" ] && return 1
    if ! is_link "$1"; then
        notify-send -t 3000 -u critical "Only valid urls are allowed" "$1"
        return 1
    fi

    if link_exits "$1"; then
        if [ "$notify" = "true" ]; then
            notify-send -t 3000 -u critical "Bookmark already exists !" "$1"
        fi
    else
        echo "$1" >>"$filepath"
        if [ "$notify" = "true" ]; then
            notify-send -t 3000 "Bookmark added !" "$1"
        fi
    fi
}

delete_bookmark(){
    [ "$1" = "" ] && return 1
    if ! link_exits; then 
        awk -v link="$1" '$0 != link' "$filepath" > "$filepath.tmp" && mv "$filepath.tmp" "$filepath"
        if [ "$notify" = "true" ]; then
            notify-send -t 3000 "Bookmark deleted" "$1"
        fi
    else
        if [ "$notify" = "true" ]; then
            notify-send -t 3000 -u critical "Bookmark does not exists !" "$1"
        fi
    fi
}

add_new_bookmark() {
    highlighted_text="$(xclip -o)"
    [ "$highlighted_text" = "" ] && return 1
    save_bookmark "$highlighted_text"
}

use_bookmark() {
    selected_text="$(cat "$filepath" | rofi -dmenu -p "$prompt_select" -theme "$rofi_theme")"
    [ "$selected_text" = "" ] && return 1

    # if [ "$notify" = "true" ];then
    #         notify-send -t 3000 "Bookmark selected" "$selected_text"
    # fi

    if [ "$copy" = "true" ]; then
        echo "$selected_text" | xclip -selection clipboard
    fi

    if [ "$typing" = "true" ]; then
        xdotool type --clearmodifiers --delay $delay "$selected_text"
    fi
}

remove_bookmark(){
    link_to_delete="$(cat "$filepath" | rofi -dmenu -p "$prompt_remove" -theme "$rofi_theme")"
    delete_bookmark "$link_to_delete"
}

visit_bookmark(){
    selected_text="$(cat "$filepath" | rofi -dmenu -p "$prompt_select" -theme "$rofi_theme")"
    [ "$selected_text" = "" ] && return 1
    xdg-open "$selected_text"
}

show_as_dmenu() {
    # Options
    select_="select bookmark"
    add="add bookmark"
    remove="remove bookmark"
    visit="visit bookmark"
    showall="open bookmark file"
    selected=$(echo -e "$visit\n$select_\n$add\n$remove\n$showall" | rofi -dmenu -p "$prompt_dmneu" -theme "$rofi_theme") 
    if [ "$selected" = "$visit" ]; then
        visit_bookmark
    elif [ "$selected" = "$select_" ]; then
        use_bookmark
    elif [ "$selected" = "$add" ]; then
        new_link=$(rofi -dmenu -p "$prompt_add" -theme "$rofi_theme")
        save_bookmark "$new_link"
    elif [ "$selected" = "$remove" ]; then
        link_to_delete="$(cat "$filepath" | rofi -dmenu -p "$prompt_remove" -theme "$rofi_theme")"
        delete_bookmark "$link_to_delete"
    elif [ "$selected" = "$showall" ]; then
        ~/.local/bin/float-window alacritty -e "nvim $filepath"
    fi
}

case "$1" in
--select)
    use_bookmark
    ;;
--remove)
    remove_bookmark
    ;;
--visit)
    visit_bookmark
    ;;
--dmenu)
    show_as_dmenu
    ;;
--export-chrome)
    export_from_chrome "$2" "$3"
    ;;
*)
    add_new_bookmark
    ;;
esac
