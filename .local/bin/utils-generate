#!/bin/bash

## Author : Ankur Kumar (SirJager)
## Github : @SirJager

rofi_theme="$HOME/.config/rofi/themes/dmenu.rasi"

prompt_dmneu="Utils Manager"
prompt_select_pass="Select Password"
prompt_desired_length="Enter length"

password_allowed_characters="a-zA-Z0-9_@#-"
lorem_ipsum_text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lacus luctus accumsan tortor posuere ac ut consequat semper. Sed elementum tempus egestas sed sed. Risus nec feugiat in fermentum posuere. Purus semper eget duis at tellus at urna. Pellentesque elit eget gravida cum sociis natoque penatibus et magnis. Mauris augue neque gravida in fermentum et sollicitudin ac orci. Pharetra vel turpis nunc eget lorem dolor sed viverra ipsum. Ridiculus mus mauris vitae ultricies leo integer malesuada nunc vel. Lectus magna fringilla urna porttitor rhoncus dolor. Nunc pulvinar sapien et ligula ullamcorper malesuada. Arcu felis bibendum ut tristique et egestas quis ipsum. Quam quisque id diam vel quam. Leo duis ut diam quam nulla porttitor massa id neque. Malesuada fames ac turpis egestas. Dolor morbi non arcu risus quis varius quam quisque. Elit scelerisque mauris pellentesque pulvinar pellentesque habitant morbi."

new_uuid () {
    genrerated_uuid=$(uuidgen | tr -d '\n')
    echo "$genrerated_uuid"
}

new_pass(){
    local length="$1"
    [ "$length" = "" ] && return 1
    ran_pass=$(tr -dc "$password_allowed_characters" < /dev/urandom | head -c "$length")
    echo "$ran_pass"
}

is_number() {
    local input="$1"
    if [[ "$input" =~ ^[0-9]+$ ]]; then
        return 0  # Input is a number
    else
        return 1  # Input is not a number
    fi
}

new_loremipsum(){
    desired_length="$1"
    IFS=$'\n' read -r -d '' -a paragraphs <<< "$lorem_ipsum_text"
    # Shuffle words within each paragraph
    for ((i = 0; i < ${#paragraphs[@]}; i++)); do
        IFS=' ' read -r -a words <<< "${paragraphs[i]}"
        shuffled_words=($(shuf -e "${words[@]}"))
        paragraphs[i]="${shuffled_words[*]}"
    done
    local new_text="${paragraphs[*]}"
     # Truncate the text to the desired length
    if [[ ${#new_text} -gt $desired_length ]]; then
        new_text="${new_text:0:$desired_length}"
    fi
    echo "$new_text"
}


show_random_uuids(){
    new_uuids=""
    for _ in {1..20}; do
        uuid=$(new_uuid)
        new_uuids="$new_uuids$uuid\n"
    done
    selected_uuid=$(echo -e "$new_uuids" | rofi -dmenu -p "$prompt_dmneu" -theme "$rofi_theme")
    [ "$selected_uuid" = "" ] && return 1
    echo -e "$selected_uuid" | xclip -selection clipboard
    notify-send -t 3000 "UUID copied to clipboard"
}


show_random_passwords(){
    new_passwords=""
    for _ in {1..20}; do
        _password=$(new_pass "$1")
        new_passwords="$new_passwords$_password\n"
    done
    selected_pass=$(echo -e "$new_passwords" | rofi -dmenu -p "$prompt_select_pass" -theme "$rofi_theme")
    [ "$selected_pass" = "" ] && return 1
    echo -e "$selected_pass" | xclip -selection clipboard
    notify-send -t 3000 "Password copied to clipboard"
}

show_lorem_ipsum_text(){
    desired_length="$(rofi -dmenu -p "$prompt_desired_length" -theme "$rofi_theme")"
    if ! is_number "$desired_length"; then
        notify-send -t 3000 -u critical "Invalid number" "$desired_length"
        return 1
    fi
    generated_text=$(new_loremipsum "$desired_length")
    echo -e "$generated_text" | xclip -selection clipboard
    notify-send -t 3000 "Generated text of length $desired_length copied to clipboard"
}

# Options
ran_uuid="random uuid"
ran_pass8="random password(8len)"
ran_pass16="random password(16len)"
ran_pass32="random password(32len)"
ran_pass64="random password(64len)"
gen_lorem="generate lorem ipsum"

show_as_dmneu(){
    selected=$(echo -e "$ran_uuid\n$ran_pass8\n$ran_pass16\n$ran_pass32\n$gen_lorem" | rofi -dmenu -p "$prompt_dmneu" -theme "$rofi_theme")
    # exit if not selected
    [ "$selected" = "" ] && exit 1

    if [ "$selected" = "$ran_uuid" ]; then
        show_random_uuids
    elif [ "$selected" = "$ran_pass8" ]; then
        show_random_passwords 8
    elif [ "$selected" = "$ran_pass16" ]; then
        show_random_passwords 16
    elif [ "$selected" = "$ran_pass32" ]; then
        show_random_passwords 32
    elif [ "$selected" = "$ran_pass64" ]; then
        show_random_passwords 64
    elif [ "$selected" = "$gen_lorem" ]; then
        show_lorem_ipsum_text 
    fi
}

case "$1" in
--dmenu)
    show_as_dmneu
    ;;
--uuid)
    new_uuid | xclip -selection clipboard
    ;;
--pass-8)
    new_pass 8 | xclip -selection clipboard
    ;;
--pass-16)
    new_pass 16 | xclip -selection clipboard
    ;;
--pass-32)
    new_pass 32 | xclip -selection clipboard
    ;;
--lorem)
    generated_text=$(new_loremipsum 100)
    echo -e "$generated_text" | xclip -selection clipboard
    ;;
*)
    echo "Usage: $0 <options>"
    printf "\nOptions\n"
    echo "--dmenu   : show as dmneu"
    echo "--uuid    : random uuid"
    echo "--pass-8  : random pass 8 char"
    echo "--pass-16 : random pass 16 char"
    echo "--pass-32 : random pass 32 char"
    echo "--lorem   : lorem ipsum 100 char"
    ;;
esac
